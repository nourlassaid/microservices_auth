{
    "openapi": "3.0.0",
    "info": {
      "title": "API de gestion des Ã©tudiants",
      "description": "API endpoints for managing students",
      "version": "1.0.0"
    },
    "paths": {
      "/etudiants": {
        "get": {
          "summary": "Get all students",
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Student"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new student",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Student created successfully"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        }
      },
      "/etudiants/{id}": {
        "get": {
          "summary": "Get student by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "ID of the student to get"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            },
            "404": {
              "description": "Student not found"
            }
          }
        },
        "put": {
          "summary": "Update student by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "ID of the student to update"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Student updated successfully"
            },
            "404": {
              "description": "Student not found"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        },
        "delete": {
          "summary": "Delete student by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "ID of the student to delete"
            }
          ],
          "responses": {
            "204": {
              "description": "Student deleted successfully"
            },
            "404": {
              "description": "Student not found"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Student": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "nom": {
              "type": "string"
            },
            "prenom": {
              "type": "string"
            },
            "groupe": {
              "type": "string"
            },
            "cin": {
              "type": "string"
            },
            "mot_de_passe": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          }
        }
      }
    }
  }
  