const express = require('express');
const router = express.Router();
const db = require('../config/db');

// Route pour la connexion
router.post('/login', (req, res) => {
  const { cin, mot_de_passe } = req.body;
  if (!cin || !mot_de_passe) {
    return res.status(400).json({ error: 'CIN and password are required' });
  }

  db.query('SELECT * FROM etudiants WHERE cin = ? AND mot_de_passe = ?', [cin, mot_de_passe], (err, results) => {
    if (err) {
      console.error('Error fetching student:', err);
      return res.status(500).json({ error: 'Internal server error' });
    }
    if (results.length === 0) {
      return res.status(404).json({ error: 'Student not found or incorrect password' });
    }

    const student = results[0];
    res.json({ message: 'Authentication successful', student });
  });
});

router.post('/register', (req, res) => {
  const { nom, prenom, email, cin, mot_de_passe, telephone, departement } = req.body;
  if (!nom || !prenom || !email || !cin || !mot_de_passe || !telephone || !departement) {
    return res.status(400).json({ error: 'All fields are required' });
  }

  db.query('SELECT COUNT(*) AS count FROM etudiants WHERE cin = ?', [cin], (err, rows) => {
    if (err) {
      console.error('Error checking student existence:', err);
      return res.status(500).json({ error: 'Internal server error' });
    }
    const count = rows[0].count;
    if (count > 0) {
      return res.status(400).json({ error: 'Student with the same CIN already exists' });
    }

    db.query('INSERT INTO etudiants (nom, prenom, email, cin, mot_de_passe, telephone, departement) VALUES (?, ?, ?, ?, ?, ?, ?)',
      [nom, prenom, email, cin, mot_de_passe, telephone, departement], (err, result) => {
        if (err) {
          console.error('Error creating student:', err);
          return res.status(500).json({ error: 'Internal server error' });
        }
        res.status(201).json({ message: 'Student created successfully', id: result.insertId });
      });
  });
});

// Route pour la mise à jour du profil
router.put('/update-profile/:id', (req, res) => {
  const id = req.params.id;
  const { nom, prenom, email, cin, mot_de_passe, groupeSpecialite, telephone, departement } = req.body;

  // Vérifiez que tous les champs sont présents
  if (!nom || !prenom || !email || !cin || !mot_de_passe || !groupeSpecialite || !telephone || !departement) {
    return res.status(400).json({ error: 'All fields are required' });
  }

  // Mettre à jour le profil de l'étudiant dans la base de données
  db.query('UPDATE etudiants SET nom = ?, prenom = ?, email = ?, cin = ?, mot_de_passe = ?, groupeSpecialite = ?, telephone = ?, departement = ? WHERE id = ?',
    [nom, prenom, email, cin, mot_de_passe, groupeSpecialite, telephone, departement, id], (err, result) => {
      if (err) {
        console.error('Error updating student profile:', err);
        return res.status(500).json({ error: 'Internal server error' });
      }
      res.json({ message: 'Student profile updated successfully' });
    });
});

module.exports = router;
